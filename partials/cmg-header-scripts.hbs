{{!-- Google ads code --}}
<script type='text/javascript'>
var googletag = googletag || {};
googletag.cmd = googletag.cmd || [];
(function() {
  var gads = document.createElement('script');
  gads.async = true;
  gads.type = 'text/javascript';
  var useSSL = 'https:' == document.location.protocol;
  gads.src = '//:googletagservices.com/tag/js/gpt.js';
  var node = document.getElementsByTagName('script')[0];
  node.parentNode.insertBefore(gads, node);
})();
</script>

{{!-- Project-specific ad settings --}}
<script type='text/javascript'>
googletag.cmd.push(function() {
  googletag.defineSlot('/12523293/www.statesman.com-wired/news/state_regional', [728, 90], 'div-gpt-ad-1403295829614-1').addService(googletag.pubads());
  googletag.defineSlot('/12523293/www.statesman.com-wired/news/state_regional', [300, 250], 'div-gpt-ad-1403295829614-2').addService(googletag.pubads());
  googletag.defineSlot('/12523293/www.statesman.com-wired/news/state_regional', [320, 50], 'div-gpt-ad-1403295829614-3').addService(googletag.pubads());
  googletag.pubads().enableSingleRequest();
  googletag.pubads().enableVideoAds();
  googletag.enableServices();
});
</script>

{{!-- Quantcast tag --}}
<script type="text/javascript">
var _qevents = _qevents || [];
(function() {
  var elem = document.createElement('script');
  elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge")
  + ".quantserve.com/quant.js";
  elem.async = true;
  elem.type = "text/javascript";
  var scpt = document.getElementsByTagName('script')[0];
  scpt.parentNode.insertBefore(elem, scpt);
})();
</script>

{{!-- Chartbeat initialization --}}
<script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>

<script>localStorage.setItem("sdsat_debug", true);</script>
<script>
    if(typeof(pubsub)=="undefined"){
        pubsub={
            subscribe:function(){
                if(typeof(DDO.deferredSubscribe) == "undefined"){
                    DDO.deferredSubscribe = [];
                }
                DDO.deferredSubscribe.push(arguments);
            },
            publish:function(){
                if(typeof(DDO.deferredPublish) == "undefined"){
                    DDO.deferredPublish = [];
                }
                DDO.deferredPublish.push(arguments);
            }
        };
    }
    window.pubsub = pubsub;
</script>
<script src='//assets.adobedtm.com/20d5deb47c9e7fe47a9f969db01578a739d7179d/satelliteLib-3bdb96ce8c62153cdc81a8a72fc964fe2ffa1652.js'></script>

<script>
    var DDO = DDO || {};
    DDO.DTMLibraryURL = '//assets.adobedtm.com/20d5deb47c9e7fe47a9f969db01578a739d7179d/satelliteLib-3bdb96ce8c62153cdc81a8a72fc964fe2ffa1652.js';
    DDO.hasLocalStorage = function(){
        isDefined = typeof(localStorage) != "undefined";
        if(isDefined){
            localStorage.setItem("test", "test");
            canRetrieve = localStorage.getItem("test") == "test";
        }
        localStorage.removeItem("test");
        return isDefined && canRetrieve;
    }
    DDO.connextActive = function(){
        var connextMetaTag = document.querySelector('meta[name="cmg:connext:config"]');
        if(connextMetaTag){
            return true;
        }else{
            return false;
        }
    }
</script>
<script src="//www.mystatesman.com/r//PortalConfig/np-paid/metrics/js/dtm-ddo-utilities.js"></script>
<script>
    //  SITE DATA
    DDO.siteData = {
        siteID: 'mystatesman',
        siteDomain: 'projects.statesman.com',
        siteVersion: 'responsive site',
        siteFormat: 'newspaper',
        siteMetro: 'tx: austin',
        siteMedium: 'newspaper',
        siteType: 'main: premium',
        siteCMS: 'methode'
    };
    // PAGE DATA
    DDO.pageData = {
      pageFlow: "",
      pageNumber: "1",
      pageType: "standalone page",
      pageIsDwp: false,
      pageContentType: "article",
      pageMainSection: "/news/local",
      pageName: (location.pathname == '/') ? location.host : location.pathname,
      pageTitle: "{{page.title}} | Austin American-Statesman",
      pageSiteSection: "News",
      pageCategory: "Local",
      pageSubCategory: "ut-tower-shooting-50th"
    };
    DDO.contentData = {
      contentTopics: "aasinteractive,local news,ut tower shooting,university of texas",
      contentByline: "{{#if page.byline}}{{#each page.byline}}{{this}}{{#unless @last}},{{/unless}}{{/each}}{{/if}}",
      contentOriginatingSite: "mystatesman",
      contentID: "9eaaf9b4-6b31-11e7-830e-a5e8bea39109",
      contentVendor: "aas-interactive",
      contentViewType: "",
      contentPublishDate: "20170717205000",
      contentUpdatedDate: "",
      blogName: "",
      galleryName: "",
      contentOriginatingCMS: "external vendor: projects server",
      contentOriginatingID: "9eaaf9b4-6b31-11e7-830e-a5e8bea39109",
      melvilID: "",
      connextProductID: "www.mystatesman.com"
    };
    DDO.init = function(pubsub, dependentEvents) {
    // The following code defers loading the DTM library until after certain events have been fired,
    // namely janrain, mg2, and access meter.
    // Note: we need to add access meter to list of dependent events etc!
    DDO.dependentEvents = dependentEvents;// e.g. ['authn', 'authz'];
    setTimeout(function(){
        DDO.dependentEventCheck("TIMED OUT");
    }, 10000);
    if(dependentEvents.length == 0){
        DDO.utilities.triggerDTMPageView();//DDO.utilities.loadDTMLibrary();
    }
    pubsub.publish("DDO-initialized");
    console.log('DDO: ', DDO);
}
//Function to remove last alphanumeric chars from DDO.pageData.pageName url
function removeExtracharFromUrl(urlPath){
    var urlArr = urlPath.split('/');
    if (urlArr.length > 3) {
        var urlArr_new = [];
        for (var i=0; i<urlArr.length-2;i++) {
            urlArr_new.push(urlArr[i]);
        }
        return urlArr_new.join('/') + '/';
    }
    else {
        return urlPath;
    }
}
</script>
<!-- end metrics_complete_override block -->
<!-- end metrics_common_override block -->
<!-- begin metrics_interaction_override block -->
<script>
    DDO.interaction = {
        init: function(pubsub, $){
        // pubsubcutioner can use regex for event names, thus all interaction type events
        // can be listened to assuming the data is correct.
        pubsub.subscribe("site-interaction", function(event, data){
            // data should be like: {element:"[widget clicked]",action: "[button clicked]"}
            DDO.action("interaction.Website", data);
        });
    }
};
</script><!-- end metrics_interaction_override block -->
<!-- begin metrics_janrain_override block -->
<script>
    DDO.janrainPort = {
        init: function(pubsub, $){
            var returnUser = false;
            var isModalOpen = false;
            var autoLogin = true;
            pubsub.subscribe("janrain.sessionNotFound", function(){
                pubsub.publish("authn-anonymous");
            });
            pubsub.subscribe("janrain.logout",function(){
                pubsub.publish("authn-logout");
            });
            pubsub.subscribe("janrain.loginSuccess", function(event, data){
                pubsub.publish("login-success");
                pubsub.publish("authn-login", data);
                if(!returnUser && !window.mg2){
                    pubsub.publish("login-complete");
                }
            });
            pubsub.subscribe("janrain.loginFailed", function(){
                pubsub.publish("login-error");
            });
            pubsub.subscribe("janrain.sessionFound", function(event, data){
                pubsub.publish("session-found");
                pubsub.publish("authn-login", data);
                if(autoLogin) {
                    pubsub.publish("authn-login-return");
                }
            });
            pubsub.subscribe("janrain.onEmailSent", function(){
                pubsub.publish("registration-success");
            });
            pubsub.subscribe("janrain.onModalOpen", function(){
                if (!isModalOpen) {
                    pubsub.publish("authn-modal-open");
                    isModalOpen = true;
                    autoLogin = false;
                }
            });
            pubsub.subscribe("janrain.onModalClose", function(){
                pubsub.publish("authn-modal-close");
                isModalOpen = false;
            });
        }
    }
</script><!-- end metrics_janrain_override block -->
<!-- begin metrics_authn_override block -->
<script>
    DDO.authn = {
        init: function(pubsub, $){
            var triggerReturnUser = false;
            var autoLogin = true;
            var connextDataSet = false;
            var connextData = {};
            var hasLocalStorage = DDO.hasLocalStorage();
            var connextActive = DDO.connextActive();
            DDO.userData = DDO.userData || {};
            pubsub.subscribe("connext-updated", function(event, data){
                connextData = data;
                connextDataSet = true;
                pubsub.publish("authn-connext-ready", data);
            })
            function useConnext(action){
                if(connextDataSet){
                    useConnextData(connextData, action);
                    connextDataSet = false;
                }else{
                    pubsub.subscribe("authn-connext-ready", function(event, connextData){
                        useConnextData(connextData, action);
                        connextDataSet = false;
                    })
                }
            }
            function useConnextData(data, action){
                console.log("SATELLITE: used connext data");
                DDO.userData.userActive = data.isAuthenticated ?'logged-in':'not logged-in';
                DDO.userData.userType = data.isAuthorized ? "premium":(data.isAuthenticated ? "standard":"anonymous");
                DDO.dependentEventCheck("authn");
                if(typeof(action) != "undefined"){
                    DDO.action(action);
                }
            }
            if(hasLocalStorage){
                DDO.userData.userStatus = localStorage.getItem("metricsUserStatus")||"";
                if(!connextActive){
                    DDO.userData.userActive = localStorage.getItem("metricsUserActive")||"";
                    DDO.userData.userType = localStorage.getItem("metricsUserType")||"";
                }
                if(localStorage.getItem("janrainCaptureReturnExperienceData")){
                    DDO.userData.userProfileID = JSON.parse(localStorage.getItem("janrainCaptureReturnExperienceData"))["uuid"] ||"";
                }
            }
            pubsub.subscribe("authn-login", function(event, data){
                if(autoLogin){
                    pubsub.publish("session-found");
                }
                DDO.userData.userStatus = 'registered';
                if(!connextActive){
                    DDO.userData.userActive = 'logged-in';
                    DDO.userData.userType = 'standard';
                }else{
                    useConnext();
                }
                if(hasLocalStorage && !connextActive){
                    localStorage.setItem("metricsUserStatus", DDO.userData.userStatus);
                    localStorage.setItem("metricsUserActive", DDO.userData.userActive);
                    localStorage.setItem("metricsUserType", DDO.userData.userType);
                }
                DDO.userData.userProfileID = data.uuid;
                if(!connextActive){
                    DDO.dependentEventCheck('authn');
                }
            });
            pubsub.subscribe("authn-anonymous", function(event, data){
                DDO.userData.userStatus = 'not registered';
                if(!connextActive){
                    DDO.userData.userActive = 'not logged-in';
                    DDO.userData.userType = 'anonymous';
                }else{
                    useConnext();
                }
                delete DDO.userData.userProfileID;
                if(hasLocalStorage){
                    localStorage.setItem("metricsUserStatus", DDO.userData.userStatus);
                    localStorage.setItem("metricsUserActive", DDO.userData.userActive);
                    localStorage.setItem("metricsUserType", DDO.userData.userType);
                }
                if(!connextActive){
                    DDO.dependentEventCheck('authn');
                }
                DDO.dependentEventCheck('authz');
            });
            pubsub.subscribe("authn-modal-open", function(event, data){
                if(typeof(window.janrainClickTracker)!="undefined"){
                    if(typeof(DDO.loginEventClickNumber)!="undefined"){
                        if(window.janrainClickTracker == DDO.loginEventClickNumber){
                            return;
                        }
                    }
                    DDO.loginEventClickNumber = window.janrainClickTracker;
                }
                if(connextActive){
                    useConnext('loginEvent_start');
                }else{
                    DDO.action('loginEvent_start');
                }
                autoLogin = false;
            });
            pubsub.subscribe("login-complete", function(event, data){
                if(!autoLogin){
                    if(connextActive){
                        useConnext('loginEvent_complete');
                    }else{
                        DDO.action('loginEvent_complete');
                    }
                }
            });
            pubsub.subscribe("authn-logout", function(event, data){
                DDO.userData.userStatus = 'not registered';
                DDO.userData.userActive = 'not logged-in';
                DDO.userData.userType = 'anonymous';
                delete DDO.userData.userProfileID;
                if(hasLocalStorage){
                    localStorage.setItem("metricsUserStatus", DDO.userData.userStatus);
                    localStorage.setItem("metricsUserActive", DDO.userData.userActive);
                    localStorage.setItem("metricsUserType", DDO.userData.userType);
                }
                DDO.action('loginEvent_logout');
            });
            pubsub.subscribe("session-found", function(){
                autoLogin = true;
                if(hasLocalStorage){
                    currentCookie = localStorage.getItem("cmg-metricsReturnUserCookie");
                    if(currentCookie != null){
                        currentCookie = JSON.parse(currentCookie);
                    }else{
                        currentCookie = {timestamp:Math.floor(Date.now() / 1000)}
                        localStorage.setItem("cmg-metricsReturnUserCookie", JSON.stringify(currentCookie));
                    }
                    if ((Math.floor(Date.now() / 1000) - currentCookie['timestamp'])>1800){
                        triggerReturnUser = true;
                        currentCookie = {timestamp:Math.floor(Date.now() / 1000)}
                        localStorage.setItem("cmg-metricsReturnUserCookie", JSON.stringify(currentCookie))
                    }
                }
            });
        // When user is auto-logged in.
        pubsub.subscribe("authn-login-return", function(event, data) {
            if(triggerReturnUser){
                if(connextActive){
                    useConnext('loginEvent_return-user');
                }else{
                    DDO.action('loginEvent_return-user');
                }
            }
            DDO.dependentEventCheck("authz");
        });
        pubsub.subscribe("registration-success", function(event, data) {
            DDO.action('loginEvent_new-user-register');
        });
        pubsub.subscribe("login-error", function(event, data) {
            DDO.action('loginEvent_error');
        });
    }
};
</script><!-- end metrics_authn_override block -->
<!-- begin metrics_authz_override block -->
<script>
    DDO.authz = {
        init: function(pubsub, $){
            pubsub.subscribe("authorization.granted", function(event, data){
                DDO.userData.userType = data.premium_user ? 'premium' : 'standard';
                if(DDO.hasLocalStorage()){
                    localStorage.setItem("metricsUserType", DDO.userData.userType);
                }
                DDO.dependentEventCheck('authz');
            });
        }
    };
</script>
<script>
    DDO.videoMetrics = {
        init: function(pubsub, $){
            pubsub.subscribe("video-start", function(event, data){
                DDO.action('videoStart', data);
            });
            pubsub.subscribe("video-content-play", function(event, data){
                DDO.action('videoContentPlay', data);
            });
            pubsub.subscribe("video-pause", function(event, data){
                DDO.action('videoPause', data);
            });
            pubsub.subscribe("video-complete", function(event, data){
                DDO.action('videoComplete', data);
            });
        }
    };
</script>
<script style="display:none">
window.cmg=window.cmg||{};cmg.anvatoConf={cmsid:17693,accessKey:'XvEgwyJR0vj8Kh8JMNTbWhW8mOmy8Mbo',dfpTimeout:20};</script>
